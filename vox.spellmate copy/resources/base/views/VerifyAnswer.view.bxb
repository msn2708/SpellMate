result-view {
  match: Announcer(this) {
    from-output: VerifyAnswer (action)
  }

  render {
    layout {
      section {
        title {
          if (this.scoreBook.score[this.counter].result == true) {
            choose (Random) {              
              template ("Congratulations!")
              template ("You did it!")
              template ("Well done!")
              template ("Good job!")
            }
          } else {
            choose (Random) {
              template ("Sorry! that is not correct")
              template ("Better luck next time")      
            }
          }        
        }
        content {
          if (this.scoreBook.score[this.counter].result == true) {
            hbox {
              content {
                vbox {
                  halign (Start)
                  valign (Baseline)
                  content {
                    text {
                      value ("Question")
                    }
                  }
                }
                vbox {
                  halign (Start)
                  valign (Baseline)
                  content {
                    text {
                      value ("Your answer")
                    }
                  }
                }
              }
            }
            hbox {
              content {
                vbox {
                  halign (Start)
                  valign (Baseline)
                  content {
                    text {
                      value ("#{value(this.questionBank.questions[counter].challengeWord)}")                     
                      style (Title_M)
                    }
                  }
                }
                vbox {
                  halign (Start)
                  valign (Baseline)
                  content {
                    text {
                      value ("#{value(action.answer.spelledWord)}")
                      style (Title_M)
                    }
                  }
                }
              }
            }
          } else {
            hbox {
              content {
                vbox {
                  halign (Start)
                  valign (Baseline)
                  content {
                    text {
                      value ("Question")
                    }
                  }
                }
                vbox {
                  halign (Start)
                  valign (Baseline)
                  content {
                    text {
                      value ("Your answer")
                    }
                  }
                }
              }
            }
            hbox {
              content {
                vbox {
                  halign (Start)
                  valign (Baseline)
                  content {
                    text {
                      value ("#{value(this.questionBank.questions[counter].challengeWord)}")                     
                      style (Title_M)
                    }
                  }
                }
                vbox {
                  halign (Start)
                  valign (Baseline)
                  content {
                    text {
                      value ("#{value(action.answer.spelledWord)}")
                      style (Title_S)
                    }
                  }
                }
              }
            }            
          }
        }
      }
    }
  }
  
  followup {
    if (this.counter == -1) {
      prompt {
        dialog {
          template ("Would you like to hear your score?")
        }
        on-confirm {
          intent {
            goal: ScoreBook
            value: $expr(this.scoreBook)
          }
        }
        on-deny {       
          message(Bye)
        }
      }
    } else {
      prompt {

        dialog {
          choose (Random) {
            template (Would you like to see the next question?)
            template (Ready for the next question?)
            template (Shall we move on to the next question?)
          }

        }

        on-confirm {
          intent {
            goal: AskNextQuestion
            value: $expr(this)
          }
        }
        on-deny {
          message {
            template ("Ok. Until next time then!")
          }
        }
      }     
    }

  }
}